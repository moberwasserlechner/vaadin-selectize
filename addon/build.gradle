plugins {
    id "com.jfrog.bintray" version "1.5"
}
apply plugin: 'maven-publish'
apply plugin: 'maven'
apply plugin: 'osgi'

sourceCompatibility = 1.7
targetCompatibility = 1.7

eclipse {
    project {
        name = 'vaadin-selectize-addon'
    }
}

dependencies {
    compile ("com.vaadin:vaadin-server:${vaadinVersion}")

    testCompile "junit:junit:4.12"
}

if (JavaVersion.current().isJava8Compatible()) {
  allprojects {
    tasks.withType(Javadoc) {
      options.addStringOption('Xdoclint:none', '-quiet')
    }
  }
}

javadoc {
    // this fixes a javadoc issue with vaadin packaging which is quite uncommon
    options.addStringOption("sourcepath", "")
}

task createAddonPom {
    pom { artifactId = project.artifactId }.writeTo("${sourceSets.main.output.resourcesDir}/META-INF/maven/${project.group}/${project.artifactId}/pom.xml")
}

jar {
    createAddonPom
    baseName = project.artifactId
    // Include sources
    sourceSets.main.java.srcDirs.each {
        from it
    }

    manifest {
        // the manifest of the default jar is of type OsgiManifest
        name = project.artifactId
        attributes "Vaadin-Package-Version": "1"
        attributes "Implementation-Title": "Selectize.js Add-on"
        attributes "Implementation-Version": project.version
        instruction 'Import-Package', '!com.google.gwt.*', '!com.vaadin.client.*', '*'
        instruction 'Bundle-Vendor', 'Michael Oberwasserlechner'
        instruction 'Bundle-Description', 'Selectize.js Add-on'
        instruction 'Bundle-DocURL', 'https://github.com/moberwasserlechner/vaadin-selectize'
    }
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}

// ###################################
// ### Publish to local maven repo ###
// ###################################

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId project.artifactId

            from components.java

            artifact sourcesJar
            artifact javadocJar
        }
    }
}

// ##########################
// ### Publish to bintray ###
// ##########################

bintray {
    user = project.hasProperty('BINTRAY_USER') ? BINTRAY_USER : null //this usually comes from gradle.properties file in ~/.gradle
    key = project.hasProperty('BINTRAY_API_KEY') ? BINTRAY_API_KEY : null //this usually comes from gradle.properties file in ~/.gradle

    // configurations = ['archives'] //When uploading configuration files
    // - OR -
    publications = ['mavenJava'] //When uploading Maven-based publication files

    dryRun = false //Whether to run this as dry-run, without deploying
    publish = false //If version should be auto published after an upload

    // Package configuration. The plugin will use the repo and name properties to check if the package already exists.
    // In that case, there's no need to configure the other package properties (like userOrg, desc, etc).
    pkg {
        repo = 'maven'
        name = 'vaadin-selectize'
        //userOrg = 'byteowls' //An optional organization name when the repo belongs to one of the user's orgs
        desc = 'Vaadin Add-on for Selectize.js jquery plugin'
        websiteUrl = 'https://github.com/moberwasserlechner/vaadin-selectize'
        issueTrackerUrl = 'https://github.com/moberwasserlechner/vaadin-selectize/issues'
        vcsUrl = 'https://github.com/moberwasserlechner/vaadin-selectize.git'
        licenses = ['MIT']
        labels = ['vaadin', 'addon', 'selectize', 'combobox', 'multiselect']
        publicDownloadNumbers = true

        version {
            name = project.version //Bintray logical version name
            // desc = 'optional'
            vcsTag = project.version
        }
    }
}
